//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/_Scripts/Manager/_InputSystem/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace InputSystem
{
    public partial class @PlayerInputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @PlayerInputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""Win10"",
            ""id"": ""bbdf934f-cb46-49bb-8823-fa4276d8d3cb"",
            ""actions"": [
                {
                    ""name"": ""Move_Player"",
                    ""type"": ""Value"",
                    ""id"": ""21df0a26-24c7-4a33-b626-39cc18a453c5"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack_Player"",
                    ""type"": ""Button"",
                    ""id"": ""9c5afda1-8ba4-4fe2-a228-4f2c11e46b46"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchHotBar_Player"",
                    ""type"": ""Value"",
                    ""id"": ""69d1b644-cfab-421b-ad2b-430736048577"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""F"",
                    ""type"": ""Button"",
                    ""id"": ""777359c2-5997-4d67-817d-8f611bc1b191"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""B"",
                    ""type"": ""Button"",
                    ""id"": ""274f59c7-f255-4d54-a227-8f08751fcc8c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CtrlMouse"",
                    ""type"": ""Value"",
                    ""id"": ""497754f7-5360-4392-90aa-0ae21b37ee2c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ESC"",
                    ""type"": ""Button"",
                    ""id"": ""fb4adb07-c276-43ec-9615-45ae52fbb83c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Shift"",
                    ""type"": ""Button"",
                    ""id"": ""57cbc055-6ce9-4835-9a3a-c86f43e3fa4c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Ctrl"",
                    ""type"": ""Button"",
                    ""id"": ""f97acfb8-7977-4572-ab52-cb9cb249db0b"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""Value"",
                    ""id"": ""f6e319e7-656a-4fa8-bf35-d34411cbf865"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""Value"",
                    ""id"": ""2753ebcc-abc6-4b94-a418-536e5133b3fb"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""E"",
                    ""type"": ""Button"",
                    ""id"": ""3a3d9a7c-08a7-4819-a436-fca3cd0bcf49"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""Button"",
                    ""id"": ""f6fc3b86-94ce-4a42-8a03-5e4860c0f435"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""24b45adc-7f5a-475c-816c-4333fc5b6035"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""f7c0d424-cb0e-4850-8e25-e0f13654d2da"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9f7eb736-5620-4e14-b451-9b59df0b18cf"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2ffb0ce5-acf9-46ce-8fdb-37483b2ebd7d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0b2de46d-da2d-4d83-a488-efeaf403de9a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b6109f88-61cd-4baf-93a0-371795eea48e"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""991e0d5c-ed20-4fa6-8fa4-bce57fe23fdb"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Attack_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""672c0f55-df82-4491-b17e-398fa012cd06"",
                    ""path"": ""<Keyboard>/#(1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHotBar_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f7fb7c6-c924-4b34-a5c5-81120b4870fe"",
                    ""path"": ""<Keyboard>/#(2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHotBar_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e97cc4d2-c443-4221-8e64-43ba0d821cf2"",
                    ""path"": ""<Keyboard>/#(3)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHotBar_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2157533a-2721-4357-b528-ea5994e06e20"",
                    ""path"": ""<Keyboard>/#(4)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHotBar_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""de2a149c-e63f-45f9-ade3-8f5ffc685efe"",
                    ""path"": ""<Keyboard>/#(5)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHotBar_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04fee209-a9ae-4c53-b79c-381c81d46843"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHotBar_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5b42745-342e-44a8-811e-986ecf8b226d"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHotBar_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01913989-0f64-4bb8-819e-6e871d088cb0"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHotBar_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6dbbcf5-fa3f-41f7-b381-dd4da61ccf6e"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHotBar_Player"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""30610b77-3929-4daf-9a28-57d62cad4f01"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""B"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""740a4f78-51fb-482a-b7e6-6c084a50b944"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f0b2af0d-03d2-4290-8b79-af6093a96924"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""F"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4ba1c8a-c512-4056-80b5-6744e7992365"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""941309b8-4bcc-4bf2-9ecc-43ccfc955760"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Ctrl"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""0d8e30da-e308-4041-bfcf-d4de3c630db4"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CtrlMouse"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Modifier"",
                    ""id"": ""ed81fa62-c207-4bed-a313-d92c8837db99"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CtrlMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Binding"",
                    ""id"": ""caa8318c-f8ba-486b-8568-1c6409b41385"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CtrlMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6fb0fe49-d5d1-4572-a337-c39c7ce51c2b"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85863121-8f67-42db-b458-cef65c6cf2d3"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d34c481-8501-4aca-abe0-2b2618af12ab"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8a3a7046-84f3-4afe-a4a8-bf4715f48b42"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8a08ff0-e51e-495e-84ac-ba57fc1dd8c1"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Win10
            m_Win10 = asset.FindActionMap("Win10", throwIfNotFound: true);
            m_Win10_Move_Player = m_Win10.FindAction("Move_Player", throwIfNotFound: true);
            m_Win10_Attack_Player = m_Win10.FindAction("Attack_Player", throwIfNotFound: true);
            m_Win10_SwitchHotBar_Player = m_Win10.FindAction("SwitchHotBar_Player", throwIfNotFound: true);
            m_Win10_F = m_Win10.FindAction("F", throwIfNotFound: true);
            m_Win10_B = m_Win10.FindAction("B", throwIfNotFound: true);
            m_Win10_CtrlMouse = m_Win10.FindAction("CtrlMouse", throwIfNotFound: true);
            m_Win10_ESC = m_Win10.FindAction("ESC", throwIfNotFound: true);
            m_Win10_Shift = m_Win10.FindAction("Shift", throwIfNotFound: true);
            m_Win10_Ctrl = m_Win10.FindAction("Ctrl", throwIfNotFound: true);
            m_Win10_MouseScroll = m_Win10.FindAction("MouseScroll", throwIfNotFound: true);
            m_Win10_Mouse = m_Win10.FindAction("Mouse", throwIfNotFound: true);
            m_Win10_E = m_Win10.FindAction("E", throwIfNotFound: true);
            m_Win10_RightClick = m_Win10.FindAction("RightClick", throwIfNotFound: true);
            m_Win10_LeftClick = m_Win10.FindAction("LeftClick", throwIfNotFound: true);
        }

        ~@PlayerInputActions()
        {
            UnityEngine.Debug.Assert(!m_Win10.enabled, "This will cause a leak and performance issues, PlayerInputActions.Win10.Disable() has not been called.");
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Win10
        private readonly InputActionMap m_Win10;
        private List<IWin10Actions> m_Win10ActionsCallbackInterfaces = new List<IWin10Actions>();
        private readonly InputAction m_Win10_Move_Player;
        private readonly InputAction m_Win10_Attack_Player;
        private readonly InputAction m_Win10_SwitchHotBar_Player;
        private readonly InputAction m_Win10_F;
        private readonly InputAction m_Win10_B;
        private readonly InputAction m_Win10_CtrlMouse;
        private readonly InputAction m_Win10_ESC;
        private readonly InputAction m_Win10_Shift;
        private readonly InputAction m_Win10_Ctrl;
        private readonly InputAction m_Win10_MouseScroll;
        private readonly InputAction m_Win10_Mouse;
        private readonly InputAction m_Win10_E;
        private readonly InputAction m_Win10_RightClick;
        private readonly InputAction m_Win10_LeftClick;
        public struct Win10Actions
        {
            private @PlayerInputActions m_Wrapper;
            public Win10Actions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move_Player => m_Wrapper.m_Win10_Move_Player;
            public InputAction @Attack_Player => m_Wrapper.m_Win10_Attack_Player;
            public InputAction @SwitchHotBar_Player => m_Wrapper.m_Win10_SwitchHotBar_Player;
            public InputAction @F => m_Wrapper.m_Win10_F;
            public InputAction @B => m_Wrapper.m_Win10_B;
            public InputAction @CtrlMouse => m_Wrapper.m_Win10_CtrlMouse;
            public InputAction @ESC => m_Wrapper.m_Win10_ESC;
            public InputAction @Shift => m_Wrapper.m_Win10_Shift;
            public InputAction @Ctrl => m_Wrapper.m_Win10_Ctrl;
            public InputAction @MouseScroll => m_Wrapper.m_Win10_MouseScroll;
            public InputAction @Mouse => m_Wrapper.m_Win10_Mouse;
            public InputAction @E => m_Wrapper.m_Win10_E;
            public InputAction @RightClick => m_Wrapper.m_Win10_RightClick;
            public InputAction @LeftClick => m_Wrapper.m_Win10_LeftClick;
            public InputActionMap Get() { return m_Wrapper.m_Win10; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(Win10Actions set) { return set.Get(); }
            public void AddCallbacks(IWin10Actions instance)
            {
                if (instance == null || m_Wrapper.m_Win10ActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_Win10ActionsCallbackInterfaces.Add(instance);
                @Move_Player.started += instance.OnMove_Player;
                @Move_Player.performed += instance.OnMove_Player;
                @Move_Player.canceled += instance.OnMove_Player;
                @Attack_Player.started += instance.OnAttack_Player;
                @Attack_Player.performed += instance.OnAttack_Player;
                @Attack_Player.canceled += instance.OnAttack_Player;
                @SwitchHotBar_Player.started += instance.OnSwitchHotBar_Player;
                @SwitchHotBar_Player.performed += instance.OnSwitchHotBar_Player;
                @SwitchHotBar_Player.canceled += instance.OnSwitchHotBar_Player;
                @F.started += instance.OnF;
                @F.performed += instance.OnF;
                @F.canceled += instance.OnF;
                @B.started += instance.OnB;
                @B.performed += instance.OnB;
                @B.canceled += instance.OnB;
                @CtrlMouse.started += instance.OnCtrlMouse;
                @CtrlMouse.performed += instance.OnCtrlMouse;
                @CtrlMouse.canceled += instance.OnCtrlMouse;
                @ESC.started += instance.OnESC;
                @ESC.performed += instance.OnESC;
                @ESC.canceled += instance.OnESC;
                @Shift.started += instance.OnShift;
                @Shift.performed += instance.OnShift;
                @Shift.canceled += instance.OnShift;
                @Ctrl.started += instance.OnCtrl;
                @Ctrl.performed += instance.OnCtrl;
                @Ctrl.canceled += instance.OnCtrl;
                @MouseScroll.started += instance.OnMouseScroll;
                @MouseScroll.performed += instance.OnMouseScroll;
                @MouseScroll.canceled += instance.OnMouseScroll;
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @E.started += instance.OnE;
                @E.performed += instance.OnE;
                @E.canceled += instance.OnE;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
                @LeftClick.started += instance.OnLeftClick;
                @LeftClick.performed += instance.OnLeftClick;
                @LeftClick.canceled += instance.OnLeftClick;
            }

            private void UnregisterCallbacks(IWin10Actions instance)
            {
                @Move_Player.started -= instance.OnMove_Player;
                @Move_Player.performed -= instance.OnMove_Player;
                @Move_Player.canceled -= instance.OnMove_Player;
                @Attack_Player.started -= instance.OnAttack_Player;
                @Attack_Player.performed -= instance.OnAttack_Player;
                @Attack_Player.canceled -= instance.OnAttack_Player;
                @SwitchHotBar_Player.started -= instance.OnSwitchHotBar_Player;
                @SwitchHotBar_Player.performed -= instance.OnSwitchHotBar_Player;
                @SwitchHotBar_Player.canceled -= instance.OnSwitchHotBar_Player;
                @F.started -= instance.OnF;
                @F.performed -= instance.OnF;
                @F.canceled -= instance.OnF;
                @B.started -= instance.OnB;
                @B.performed -= instance.OnB;
                @B.canceled -= instance.OnB;
                @CtrlMouse.started -= instance.OnCtrlMouse;
                @CtrlMouse.performed -= instance.OnCtrlMouse;
                @CtrlMouse.canceled -= instance.OnCtrlMouse;
                @ESC.started -= instance.OnESC;
                @ESC.performed -= instance.OnESC;
                @ESC.canceled -= instance.OnESC;
                @Shift.started -= instance.OnShift;
                @Shift.performed -= instance.OnShift;
                @Shift.canceled -= instance.OnShift;
                @Ctrl.started -= instance.OnCtrl;
                @Ctrl.performed -= instance.OnCtrl;
                @Ctrl.canceled -= instance.OnCtrl;
                @MouseScroll.started -= instance.OnMouseScroll;
                @MouseScroll.performed -= instance.OnMouseScroll;
                @MouseScroll.canceled -= instance.OnMouseScroll;
                @Mouse.started -= instance.OnMouse;
                @Mouse.performed -= instance.OnMouse;
                @Mouse.canceled -= instance.OnMouse;
                @E.started -= instance.OnE;
                @E.performed -= instance.OnE;
                @E.canceled -= instance.OnE;
                @RightClick.started -= instance.OnRightClick;
                @RightClick.performed -= instance.OnRightClick;
                @RightClick.canceled -= instance.OnRightClick;
                @LeftClick.started -= instance.OnLeftClick;
                @LeftClick.performed -= instance.OnLeftClick;
                @LeftClick.canceled -= instance.OnLeftClick;
            }

            public void RemoveCallbacks(IWin10Actions instance)
            {
                if (m_Wrapper.m_Win10ActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IWin10Actions instance)
            {
                foreach (var item in m_Wrapper.m_Win10ActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_Win10ActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public Win10Actions @Win10 => new Win10Actions(this);
        public interface IWin10Actions
        {
            void OnMove_Player(InputAction.CallbackContext context);
            void OnAttack_Player(InputAction.CallbackContext context);
            void OnSwitchHotBar_Player(InputAction.CallbackContext context);
            void OnF(InputAction.CallbackContext context);
            void OnB(InputAction.CallbackContext context);
            void OnCtrlMouse(InputAction.CallbackContext context);
            void OnESC(InputAction.CallbackContext context);
            void OnShift(InputAction.CallbackContext context);
            void OnCtrl(InputAction.CallbackContext context);
            void OnMouseScroll(InputAction.CallbackContext context);
            void OnMouse(InputAction.CallbackContext context);
            void OnE(InputAction.CallbackContext context);
            void OnRightClick(InputAction.CallbackContext context);
            void OnLeftClick(InputAction.CallbackContext context);
        }
    }
}
